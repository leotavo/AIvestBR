name: Incrementar Versão Avançada com Changelog, Tag e Formatação Personalizada

on:
  push:
    branches:
      - main

permissions:
  contents: write  # 🔓 Permite push e criação de tags

jobs:
  bump-version:
    runs-on: ubuntu-latest
    outputs:
      new-version: ${{ steps.version-bump.outputs.new-version }}
      incremento: ${{ steps.version-bump.outputs.incremento }}

    steps:
      - name: Checkout código
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configurar Git (UTF-8 habilitado)
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global i18n.commitEncoding utf-8
          git config --global i18n.logOutputEncoding utf-8

      - name: Incrementar versão com base no commit
        id: version-bump
        run: |
          if [ ! -f VERSION ]; then echo "0.0.0" > VERSION; fi
          CURRENT_VERSION=$(cat VERSION | tr -d '\r' | tr -d '\0')
          if [[ ! $CURRENT_VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            CURRENT_VERSION="0.0.0"
          fi
          IFS='.' read -r -a parts <<< "$CURRENT_VERSION"
          MAJOR=${parts[0]}; MINOR=${parts[1]}; PATCH=${parts[2]}

          COMMIT_MSG=$(git log -1 --pretty=%B | tr -d '\r' | tr -d '\0')

          if echo "$COMMIT_MSG" | grep -q "BREAKING CHANGE"; then
            MAJOR=$((MAJOR + 1)); MINOR=0; PATCH=0; INCREMENTO="🚨 MAJOR"
          elif echo "$COMMIT_MSG" | grep -qi "^feat"; then
            MINOR=$((MINOR + 1)); PATCH=0; INCREMENTO="✨ MINOR"
          elif echo "$COMMIT_MSG" | grep -qi "^fix"; then
            PATCH=$((PATCH + 1)); INCREMENTO="🐛 PATCH"
          else
            PATCH=$((PATCH + 1)); INCREMENTO="📦 PATCH Padrão"
          fi

          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "$NEW_VERSION" > VERSION
          echo "new-version=$NEW_VERSION" >> $GITHUB_ENV
          echo "incremento=$INCREMENTO" >> $GITHUB_ENV

      - name: Gerar changelog avançado
        run: |
          echo "# 📜 Changelog - Versão ${{ env.new-version }}" > CHANGELOG.md
          echo "\n## 🚀 Mudanças Recentes" >> CHANGELOG.md
          git log --pretty=format:"* %s (%an)" --no-decorate -10 >> CHANGELOG.md
          echo "\n🔖 **Versão:** ${{ env.new-version }} - $(date +'%Y-%m-%d')" >> CHANGELOG.md
          echo "🌟 **Incremento:** ${{ env.incremento }}" >> CHANGELOG.md

      - name: Commit, Tag e Push nova versão
        run: |
          git add VERSION CHANGELOG.md
          git commit -m "🔖 Versão ${{ env.new-version }} - ${{ env.incremento }}"
          git tag -a "v${{ env.new-version }}" -m "🔖 Release ${{ env.new-version }}"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/leotavo/investment_recommendation_system.git
          git push origin main --follow-tags

      - name: Criar Release no GitHub com changelog formatado
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ env.new-version }}"
          name: "🔖 Release ${{ env.new-version }} - ${{ env.incremento }}"
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
