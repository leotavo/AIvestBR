name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: üõéÔ∏è Checkout do c√≥digo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Puxa todas as tags para evitar problemas com bump2version

      - name: üêç Configurar Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: üì¶ Instalar depend√™ncias
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest bump2version

      - name: ‚úÖ Rodar testes
        run: pytest tests/

      - name: üîñ Atualizar vers√£o
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions[bot]"
          git fetch --tags  # Garante que as tags locais estejam sincronizadas

          # Obt√©m a nova vers√£o antes de aplic√°-la
          NEW_VERSION=$(bump2version --dry-run --list | grep new_version | cut -d= -f2)

          # Se a tag j√° existir, apaga a vers√£o antiga para evitar erro
          if git rev-parse "v$NEW_VERSION" >/dev/null 2>&1; then
            echo "‚ö†Ô∏è A vers√£o v$NEW_VERSION j√° existe. Deletando a tag antiga..."
            git tag -d "v$NEW_VERSION"
            git push --delete origin "v$NEW_VERSION"
          fi

          # Atualiza a vers√£o e faz o push
          bump2version patch
          git push origin main --follow-tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
